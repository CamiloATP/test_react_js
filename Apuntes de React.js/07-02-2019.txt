
React.js trabaja con otros frameworks, librerias , tecnologias, para trabajar más alla de 
la vista.

*.- Trabaja con virtual Dom
*.- Trabaja con componentes(Se pueden crear nuestras propias etiquetas html), es reusa el 
codigo como una api
---

NOTA: Investigar -> Server Side Rendering

---

Related Tools(Herramientas relacionadas)

*.- React Native(interfaces for app mobile)
*.- React Windows(interfaces for app Desk)
*.- Next.js(Server side rendering)
*.- GraphQL(Obtener datos de servidores remotos y utilizarlo en la interfaces) <-- o rest api 
*.- Redux(Administrar el estado de los datos de la aplicación listar... el crud¿?)
*.- Flux

Para empezar a utilizar react.js, primero se necesita instalar node.js para la interpretacion 
de js y para ejecutarlo en el S.O y luego pasarlo al navegador.

NPM(Node Package Manager -> es el administrador de paquetes de node.js)

/* Se debe instalar el auto instalador de react.js con las librerias necesarias para empezar un proyecto */
> npm install -g create-react-app

/* Para instalar el auto instalador por via comando de react.js para crear proyectos con las librerias necesarias */
> npm install -g create-react-app

/* Para crear la aplicación con sus librerias necesarias, se necesita internet para poder usar este comando */
> create-react-app nombredelaaplicacion

/* Para ver la versión de react.js de un proyecto creado con la app create-react-app */
> create-react-app nombreproyecto --info

---

Toda la aplicación, react se monta dentro del archivo index.html

> src, en esta carpeta se encuentrará el código de react.js, el archivo main para arracar la aplicación es index.js





























